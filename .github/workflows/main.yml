name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest   
    permissions:
      packages: write   
      contents: write	
    outputs: 
      Version: ${{ steps.gitversion.outputs.SemVer }}
      CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }} 

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 #fetch-depth is needed for GitVersion
        
    #Install and calculate the new version with GitVersion  
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: 5.x
    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.10.2
      id: gitversion # step id used as reference for output values
    - name: Display GitVersion outputs
      run: |
        echo "Version: ${{ steps.gitversion.outputs.SemVer }}"
        echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"
    
    #Build/pack the project    
    - name: Build and Pack NuGet package
      run: dotnet pack UsbSerialForAndroid/UsbSerialForAndroid.csproj -p:Version='${{ steps.gitversion.outputs.SemVer }}' -c Release -v n -o ./package    
    - name: Add private nuget source
      run: dotnet nuget add source --username "artemkuryanov@gmail.com" --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/ridicoulous/index.json"
    - name: Push package to GitHub packages 
      if: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }} > 0 #Only release if there has been a commit/version change  
      run: |
        cd package
        dotnet nuget push *.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source "github"
    
    #Create release
    - name: Create Release
      if: 1 == 0 #outputs.CommitsSinceVersionSource > 0 #Only release if there has been a commit/version change
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.gitversion.outputs.SemVer }}
        release_name: Release ${{ steps.gitversion.outputs.SemVer }}
    - name: Create Release
      if: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}" > 0 #Only release if there has been a commit/version change
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.gitversion.outputs.SemVer }}
        name: Release ${{ steps.gitversion.outputs.SemVer }}
        artifacts: "/package/*.nupkg"
        token: ${{ secrets.GITHUB_TOKEN }}
